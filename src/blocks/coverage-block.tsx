import { createBlock } from '@covbot/vite-plugin-github-block/client';
import { react, useBlockContext } from '@covbot/vite-plugin-github-block/react';
import { FileBlockProps } from '@githubnext/blocks';
import { ThemeProvider, BaseStyles } from '@primer/react';
import { useEffect, useState } from 'react';
import { CoverageTable } from '../components/CoverageTable';
import { getParsedCoverage } from '../utils/getParsedCoverage';
import { ParsedCoverage } from '../utils/ParsedCoverage';

const CoverageBlock = () => {
	const { context, content } = useBlockContext() as FileBlockProps;

	const [parsedCoverage, setParsedCoverage] = useState<ParsedCoverage | undefined>();

	useEffect(() => {
		let stillFetching = true;

		const fetchData = async () => {
			const output = await getParsedCoverage(content, context.path);
			if (stillFetching) {
				setParsedCoverage(output);
			}
		};

		fetchData();

		return () => {
			stillFetching = false;
		};
	}, [content, context.path]);

	if (!parsedCoverage) {
		return <div>This file is not supported</div>;
	}

	return (
		<ThemeProvider>
			<BaseStyles>
				<CoverageTable coverage={parsedCoverage} />
			</BaseStyles>
		</ThemeProvider>
	);
};

export default createBlock({
	id: 'covbot.file-coverage-block',
	title: 'Jest coverage',
	matches: ['*'],
	description: 'Display coverage, generated by Jest.',
	type: 'file',
	render: react(CoverageBlock),
});
